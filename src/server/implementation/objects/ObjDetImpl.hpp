/* Autogenerated with kurento-module-creator */

#ifndef __OBJ_DET_IMPL_HPP__
#define __OBJ_DET_IMPL_HPP__

#include "ObjDet.hpp"
#include "ObjDetOpenCVImpl.hpp"
#include "OpenCVFilterImpl.hpp"
#include <EventHandler.hpp>
#include <boost/property_tree/ptree.hpp>

namespace kurento {
namespace module {
namespace objdet {
class ObjDetImpl;
} // namespace objdet
} // namespace module
} // namespace kurento

namespace kurento {
void Serialize(std::shared_ptr<kurento::module::objdet::ObjDetImpl> &object, JsonSerializer &serializer);
} // namespace kurento

namespace kurento {
class MediaPipelineImpl;
} // namespace kurento

namespace kurento {
namespace module {
namespace objdet {

class ObjDetImpl : public OpenCVFilterImpl, public virtual ObjDet, public virtual ObjDetOpenCVImpl {

public:
  ObjDetImpl(const boost::property_tree::ptree &config, std::shared_ptr<MediaPipeline> mediaPipeline);

  virtual ~ObjDetImpl() = default;

  /* Next methods are automatically implemented by code generator */
  virtual bool connect(const std::string &eventType, std::shared_ptr<EventHandler> handler);
  virtual void invoke(std::shared_ptr<MediaObjectImpl> obj, const std::string &methodName, const Json::Value &params,
                      Json::Value &response);

  virtual void Serialize(JsonSerializer &serializer);
  std::shared_ptr<MediaObject> getSharedFromThis() override { return shared_from_this(); };

  void setConfidence(float confidence);
  void setBoxLimit(int boxLimit);
  void setDrawing(bool isDrawing, bool keepBoxes);
  void startInferring();
  void stopInferring();
  void heartbeat();
  void initSession();
  void changeModel(const std::string &modelName);
  void getModelNames();
  void setInferringDelay(const int msec);
  void destroy();

private:
  class StaticConstructor {
  public:
    StaticConstructor();
  };

  static StaticConstructor staticConstructor;
};

} // namespace objdet
} // namespace module
} // namespace kurento

#endif /*  __OBJ_DET_IMPL_HPP__ */
